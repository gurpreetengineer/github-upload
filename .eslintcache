[{"/home/rexweb/Documents/gurpreet/Apps/quizstepper/src/index.js":"1","/home/rexweb/Documents/gurpreet/Apps/quizstepper/src/reportWebVitals.js":"2","/home/rexweb/Documents/gurpreet/Apps/quizstepper/src/App.js":"3","/home/rexweb/Documents/gurpreet/Apps/quizstepper/src/components/timer.js":"4","/home/rexweb/Documents/gurpreet/Apps/quizstepper/src/components/RadioButtons.js":"5","/home/rexweb/Documents/gurpreet/Apps/quizstepper/src/components/BackendTimer.js":"6","/home/rexweb/Documents/gurpreet/Apps/quizstepper/src/components/fetchingValues.js":"7","/home/rexweb/Documents/gurpreet/Apps/quizstepper/src/components/result.js":"8","/home/rexweb/Documents/gurpreet/Apps/quizstepper/src/components/finalResult.js":"9"},{"size":543,"mtime":1610620244287,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1610516829474,"results":"12","hashOfConfig":"11"},{"size":1268,"mtime":1610624467471,"results":"13","hashOfConfig":"11"},{"size":2953,"mtime":1610602264475,"results":"14","hashOfConfig":"11"},{"size":1520,"mtime":1610610424272,"results":"15","hashOfConfig":"11"},{"size":1382,"mtime":1610622678821,"results":"16","hashOfConfig":"11"},{"size":2742,"mtime":1610622287275,"results":"17","hashOfConfig":"11"},{"size":337,"mtime":1610620076899,"results":"18","hashOfConfig":"11"},{"size":3634,"mtime":1610629561722,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"lryd3t",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rexweb/Documents/gurpreet/Apps/quizstepper/src/index.js",[],["43","44"],"/home/rexweb/Documents/gurpreet/Apps/quizstepper/src/reportWebVitals.js",[],"/home/rexweb/Documents/gurpreet/Apps/quizstepper/src/App.js",["45","46","47"],"import React from \"react\"; //, { useState }\nimport \"./App.css\";\nimport BackendTimer from \"./components/BackendTimer\";\nimport RadioButtons from \"./components/RadioButtons\";\n// import Timer from \"./components/timer\";\nimport FetchingValues from \"./components/fetchingValues\";\nimport FinalResult from \"./components/finalResult\";\n\nfunction App() {\n  // const _questions = [\n  //   {\n  //     que: \"Fastest Animal\",\n  //     ans: [\n  //       { text: \"Cheetah\", value: 1 },\n  //       { text: \"Human\", value: 0 },\n  //       { text: \"Penguin\", value: 0 },\n  //       { text: \"Lion\", value: 0 },\n  //     ],\n  //   },\n  //   {\n  //     que: \"Largest Country\",\n  //     ans: [\n  //       { text: \"India\", value: 0 },\n  //       { text: \"China\", value: 0 },\n  //       { text: \"Russia\", value: 1 },\n  //       { text: \"USA\", value: 0 },\n  //     ],\n  //   },\n  // ];\n  // console.log(_questions);\n  // console.log(_questions.text);\n\n  // const [buttonName, setButtonName] = useState(\"Save\");\n  // const [innerValue, setInnerValue] = useState(0);\n\n  return (\n    <>\n      <div>\n        {/* <Timer /> */}\n        {/* <RadioButtons /> */}\n        {/* <BackendTimer /> */}\n        <FinalResult />\n        {/* <FetchingValues /> */}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","/home/rexweb/Documents/gurpreet/Apps/quizstepper/src/components/timer.js",["48","49"],"/home/rexweb/Documents/gurpreet/Apps/quizstepper/src/components/RadioButtons.js",["50"],"import React, { Component } from \"react\";\n\nexport class RadioButtons extends Component {\n  arr = [\n    {\n      que: \"Fastest Animal\",\n      ans: [\"Cheetah\", \"Human\", \"Penguin\", \"Lion\"],\n      correct: \"Cheetah\",\n      questionId: \"123\",\n    },\n    {\n      que: \"Largest Country\",\n      ans: [\"India\", \"China\", \"Russia\", \"USA\"],\n      correct: \"Russia\",\n    },\n  ];\n  counter = 0;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentQue: this.arr[this.counter].que,\n      currentAns: \"\",\n    };\n    console.log(\"constructor: \" + this.state.currentQue);\n\n    console.log(\"inside Constructor this.counter: \" + this.counter);\n  }\n\n  handleClick = (event) => {\n    event.preventDefault();\n    this.counter = this.counter == 1 ? 0 : this.counter + 1;\n    console.log(\"********* this.counter: \" + this.counter);\n    this.setState({ currentQue: this.arr[this.counter].que });\n  };\n\n  // console.log(\"Outside everything this.counter\" + this.counter)\n\n  render() {\n    return (\n      <div>\n        <h3> {this.state.currentQue}</h3>\n        <form id=\"form1\">\n          {/* onSubmit={(e) => this.handleClick(e)} */}\n          {/* <label>{this.arr.map()}</label> */}\n          {/* <input type=\"button\" onClick={this.handleClick} value=\"Submit\" /> */}\n        </form>\n        <button\n          type=\"submit\"\n          form=\"form1\"\n          value=\"Submit\"\n          onClick={(event) => this.handleClick(event)}\n        >\n          Submit\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default RadioButtons;\n","/home/rexweb/Documents/gurpreet/Apps/quizstepper/src/components/BackendTimer.js",["51"],"import React, { Component } from \"react\";\n\nclass BackendTimer extends Component {\n  arr = [\n    {\n      que: \"Fastest Animal\",\n      ans: [\"Cheetah\", \"Human\", \"Penguin\", \"Lion\"],\n      correct: \"Cheetah\",\n      questionId: \"123\",\n    },\n    {\n      que: \"Largest Country\",\n      ans: [\"India\", \"China\", \"Russia\", \"USA\"],\n      correct: \"Russia\",\n      questionId: \"124\",\n    },\n  ];\n\n  counter = 0;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentQue: this.arr[this.counter].que,\n      currentAns: \"\",\n      currentCount: 3,\n    };\n  }\n\n  timer = () => {\n    this.setState({\n      currentCount: this.state.currentCount - 1,\n    });\n    if (this.state.currentCount < 1 && this.counter < 1) {\n      this.counter = this.counter == 1 ? 0 : this.counter + 1;\n      this.setState({\n        currentCount: 3,\n        currentQue: this.arr[this.counter].que,\n      });\n    } else if (this.state.currentCount < 1 && this.counter === 1) {\n      this.setState({ currentCount: \"Time's up!\" });\n      clearInterval(this.intervalId);\n    }\n  };\n\n  componentDidMount() {\n    this.intervalId = setInterval(this.timer, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  render() {\n    return (\n      <div>\n        <p>{this.state.currentCount}</p>\n        <h3>{this.state.currentQue}</h3>\n      </div>\n    );\n  }\n}\n\nexport default BackendTimer;\n","/home/rexweb/Documents/gurpreet/Apps/quizstepper/src/components/fetchingValues.js",["52"],"import React, { Component } from \"react\";\nimport Result from \"./result\";\n\nexport class FetchingValues extends Component {\n  arr = [\n    {\n      que: \"Fastest Animal\",\n      ans: [\"Cheetah\", \"Human\", \"Penguin\", \"Lion\"],\n      correct: \"Cheetah\",\n      questionId: \"123\",\n    },\n    {\n      que: \"Largest Country\",\n      ans: [\"India\", \"China\", \"Russia\", \"USA\"],\n      correct: \"Russia\",\n    },\n  ];\n  counter = 0;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentQue: this.arr[this.counter].que,\n      currentAns: this.arr[this.counter].ans,\n      setAnswer: \"\",\n      rightAnswers: 0,\n      wrongAnswers: 0,\n      currentCount: 3,\n    };\n  }\n\n  handleClick = (event) => {\n    event.preventDefault();\n\n    if (this.state.setAnswer === \"\") {\n      alert(\"Kindly input a value\");\n      return;\n    } else {\n      alert(\"Your answer is: \" + this.state.setAnswer);\n      if (\n        this.state.setAnswer !== \"\" &&\n        this.state.setAnswer === this.arr[this.counter].correct\n      ) {\n        this.setState({\n          rightAnswers: this.state.rightAnswers + 1,\n        });\n      } else {\n        this.setState({\n          wrongAnswers: this.state.wrongAnswers + 1,\n        });\n      }\n\n      this.counter = this.counter === 1 ? 2 : this.counter + 1;\n\n      if (this.counter === 2) {\n        document.getElementById(\"buttn\").disabled = true;\n        return;\n      }\n      this.setState({\n        currentQue: this.arr[this.counter].que,\n        currentAns: this.arr[this.counter].ans,\n        setAnswer: \"\",\n      });\n    }\n\n    document.querySelector(\n      'input[name=\"' + (this.state.currentQue + \" answer\") + '\"]:checked'\n    ).checked = false;\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      setAnswer: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h3> {this.state.currentQue}</h3>\n        <form id=\"form1\">\n          {this.state.currentAns.map((option, index) => (\n            <label htmlFor={this.state.currentQue + \" answer\"} key={index}>\n              <input\n                type=\"radio\"\n                onChange={(event) => this.handleChange(event)}\n                value={option}\n                name={this.state.currentQue + \" answer\"}\n              />\n              {option}\n            </label>\n          ))}\n\n          <button\n            id=\"buttn\"\n            type=\"submit\"\n            form=\"form1\"\n            value=\"Submit\"\n            onClick={(event) => this.handleClick(event)}\n          >\n            Submit\n          </button>\n        </form>\n        <Result\n          rightAnswers={this.state.rightAnswers}\n          wrongAnswers={this.state.wrongAnswers}\n        />\n        <Result />\n      </div>\n    );\n  }\n}\n\nexport default FetchingValues;\n","/home/rexweb/Documents/gurpreet/Apps/quizstepper/src/components/result.js",[],"/home/rexweb/Documents/gurpreet/Apps/quizstepper/src/components/finalResult.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":20},{"ruleId":"57","severity":1,"message":"61","line":4,"column":8,"nodeType":"59","messageId":"60","endLine":4,"endColumn":20},{"ruleId":"57","severity":1,"message":"62","line":6,"column":8,"nodeType":"59","messageId":"60","endLine":6,"endColumn":22},{"ruleId":"63","severity":1,"message":"64","line":61,"column":36,"nodeType":"65","messageId":"66","endLine":61,"endColumn":38},{"ruleId":"63","severity":1,"message":"64","line":89,"column":27,"nodeType":"65","messageId":"66","endLine":89,"endColumn":29},{"ruleId":"63","severity":1,"message":"64","line":32,"column":33,"nodeType":"65","messageId":"66","endLine":32,"endColumn":35},{"ruleId":"63","severity":1,"message":"64","line":35,"column":35,"nodeType":"65","messageId":"66","endLine":35,"endColumn":37},{"ruleId":"67","severity":1,"message":"68","line":67,"column":60,"nodeType":"65","messageId":"69","endLine":67,"endColumn":61},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'BackendTimer' is defined but never used.","Identifier","unusedVar","'RadioButtons' is defined but never used.","'FetchingValues' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-global-assign","no-unsafe-negation"]